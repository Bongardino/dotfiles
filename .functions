# print all the 256 colors supported by terminal
function allthecolors() {
  x=$(tput op) y=$(printf %$((${COLUMNS}-6))s);for i in {0..256};do o=00$i;echo -e ${o:${#o}-3:3} $(tput setaf $i;tput setab $i)${y// /=}$x;done;
}

# Decode \x{ABCD}-style Unicode escape sequences
function unidecode() {
  perl -e "binmode(STDOUT, ':utf8'); print \"$@\""
  # print a newline unless weâ€™re piping the output to another program
  if [ -t 1 ]; then
      echo # newline
  fi
}

function retry()
{
    let backoff=1
    false
    while [[ $? -ne 0 && $? -ne 130 ]]; do
        "$@" || (sleep $((backoff*=2));false)
    done
}

# privnote cli
function privnote() {
  echo "input semi secret"
  read -r input

  local message="$input"

  local password="$(perl -pe 'binmode(STDIN, ":bytes"); tr/A-Za-z0-9//dc;' < /dev/urandom | head -c 9; echo)"

  local data=$(echo "$message" | openssl enc -e -aes-256-cbc -k "$password" -a -md md5)s

  local note_link=$(curl -s 'https://privnote.com/' \
                    -H 'X-Requested-With: XMLHttpRequest' \
                    --data-urlencode "data=$data" \
                    --data "has_manual_pass=false&duration_hours=0&dont_ask=false&data_type=T&notify_email=&notify_ref=" \
                    | jq -r --arg arg "$password" '.note_link + "#" + $arg')

  echo "$note_link" | pbcopy
  echo "note URL is $note_link"
}

# set iterm window title
function title {
    echo -ne "\033]0;$*\007"
}

function dot_edit () {
  pushd "$HOME" > /dev/null
  if [ -e ".gitignore" ]; then
    cat .gitignore | grep -F . | tr -d ! | xargs -I {} subl {}
  else
    echo "dotfile .gitignore not found"
  fi
  popd > /dev/null
}

# aws-profile setter w autocomplete
aws_profiles="$(cat $HOME/.aws/config | grep '\[profile' | sed -n 's/\[profile \(.*\).*\]/\1/p' | sort)"
[ -e "$HOME/.aws/config" ] && complete -o "default" -o "nospace" -W "$aws_profiles logout" aws-profile
aws-profile() {
  local profiles=($aws_profiles)

  _clear() {
    while read var; do unset $var; done < <(env | grep AWS | cut -d'=' -f1-1)
    unset WORLD
    unset ACCOUNT_NAME
  }

  if [ "$1" == 'logout' ];  then
    _clear && echo AWS Profile cleared
  elif [[ ! " ${profiles[@]} " =~ " ${1} " ]]; then
    echo "No such profile in ~/.aws/profile. Mayhaps one of these?"
    echo
    printf '%s\n' "${profiles[@]}"
  else
    _clear
    export AWS_PROFILE="$1"
    echo AWS Profile set to "$1"
  fi
}
